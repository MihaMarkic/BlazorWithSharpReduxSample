@page "/fetchdata"
@inject Communicator Communicator

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (State.IsLoading)
{
    <p><em>Loading...</em></p>
}
else if (State.Error != null)
{
    <p><em>Error: @State.Error</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in State.Forecasts)
    {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
@if (!State.IsLoading)
{
    <button @onclick(() => RefreshAsync())>Reload</button>

}

@functions {
    public FetchDataState State { get; set; }

    protected override Task OnInitAsync()
    {
        return RefreshAsync();
    }
    public Task RefreshAsync()
    {
        return Communicator.FetchWeatherForecastAsync();
    }
}
